#Lista de Ejercicios nro3
#1.Una tienda de autopartes necesita un programa para catalogar sus productos,crear la clase catalogo
# y producto, realizar un objeto dentro de un catalgo de productos el cual debe tener un metodo para agregar
# productos el cual debe tener un metodo para agregar productos y otra para mostrar toda la lista de productos.
class Producto:
    def __init__(self, codigo, nombre, precio, descripcion):
        self.codigo = codigo
        self.nombre = nombre
        self.precio = precio
        self.descripcion = descripcion

    def __str__(self):
        return f"{self.codigo}: {self.nombre} - ${self.precio} - {self.descripcion}"


class Catalogo:
    def __init__(self):
        self.productos = []

    def agregar_producto(self, producto):
        self.productos.append(producto)

    def mostrar_productos(self):
        if not self.productos:
            print("No hay productos en el catálogo.")
        else:
            print("Lista de productos en el catálogo:")
            for producto in self.productos:
                print(producto)
#2. Realizar un programa que tenga una clase producto el cual solo tiene los atributos de nombre y codigo
# el codigo tiene la siguiente estructura PAIS-LOTE-AÑO ejemplo:PERU-00001-2024 crear un metodo que imprima el objeto de forma 
# literal (__str__) y que permita identificar el pais de origen y nro de lote
class Producto:
    def __init__(self, nombre, codigo):
        self.nombre = nombre
        self.codigo = codigo

    def pais_lote(self):
        partes = self.codigo.split("-")
        if len(partes) == 3:
            pais = partes[0]
            lote = partes[1]
            return pais, lote
        else:
            return "Código de formato incorrecto"

    def __str__(self):
        pais, lote = self.pais_lote()
        return f"Producto: {self.nombre}\nCódigo: {self.codigo}\nPaís de Origen: {pais}\nNúmero de Lote: {lote}"

#3. Del siguiente texto :
"""
Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
"""
# realizar al menos 4 funciones de string 

#4. crear un archivo nuevo y realizar una funcion que permita dividir 2 numeros, importar esta funcion
# ponerlo en un bucle while True , y al ser llamada la importacion ponerlo dentro de un try except 
# ejecutar la funcion hasta que realice correctamente la division luego de eso romper el bucle
def dividir(dividendo, divisor):
    if divisor == 0:
        raise ValueError("El divisor no puede ser cero.")
    return dividendo / divisor
while True:
    try:
        dividendo = float(input("Ingrese el dividendo: "))
        divisor = float(input("Ingrese el divisor: "))
        resultado = dividir(dividendo, divisor)
        print("El resultado de la división es:", resultado)
        break  # Rompe el bucle si la división se realiza sin errores
    except ValueError as e:
        print("Error:", e)
    except ZeroDivisionError:
        print("Error: No se puede dividir entre cero.")
    except Exception as e:
        print("Ocurrió un error inesperado:", e)
